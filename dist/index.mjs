import{execaSync as t,execa as e}from"execa";import{chdir as o,cwd as r}from"node:process";import s from"node:readline";import{stat as i}from"node:fs/promises";import n from"node:path";import c from"ora";const a=n.resolve();let p=c("");const m=async({appName:s,release:c,master:m,npmScript:u,customScript:l,debug:d,dist:g})=>{process.on("uncaughtException",(t=>{p.fail((d?"调试":"打包或部署")+"意外退出，遇到以下问题：\n"),console.log(t),process.exit()})).on("SIGINT",process.exit).on("exit",(()=>{try{t("git",["worktree","remove","-f","-f",c]),t("git",["worktree","prune"])}catch(t){}t("exit",[1])}));const{stdout:f}=await e("git",["symbolic-ref","--short","-q","HEAD"]);if(m&&m!==f)return t("echo",[`请切换到 ${m} 分支后再进行打包。`]),void t("exit",[1]);p.text=`开始${d?"调试":"打包部署"}...`,p.start();try{await i(n.join(a,"build"))}catch(e){t("mkdir",["build"])}finally{const{stdout:r}=await e("git",["worktree","add","-B",c,`build/${c}`,`origin/${c}`]);console.log(r),o(`build/${c}`),t("rm",["-rf","*"]),o(a)}if(p.text=`正在运行打包脚本... npm run ${u}`,l)await l();else{const{stdout:t,stderr:o}=await e("npm",["run",u]);console.log(o+"\n",t)}if(t("cp",["-rf",`${g}${s?`/${s}`:""}/*`,`build/${c}`]),o(`build/${c}`),d)return console.log(`git三连前的工作目录${r()}`),void p.succeed("调试完成");p.text="打包完成，准备git发布";const{stdout:$}=await(b=f,e("git",["rev-parse","--short",b]));var b;const h=`built by branch-${f}-git-commit-hash ${$}`;t("git",["add","-A"]),t("git",["commit","-m",h]);const{stdout:x}=t("git",["push","-u","--set-upstream","origin",c],{shell:!0});console.log(x),p.succeed(`代码推送成功，本次推送的git提交信息为：${h}，打包分支为${c}`)};function u({release:t="release",dist:e="dist",master:o="master",debug:r=!1,npmScript:i,customScript:n=null}){if("string"==typeof t)return void m({release:t,master:o,npmScript:i,customScript:n,debug:r,dist:e});const c=[];for(const e in t)c.push(`${e}.${t[e].branch}`);let a=s.createInterface({input:process.stdin,output:process.stdout});console.log("所有的构建分支：\n"+c.join("\n")),a.question("请选择一个构建分支（序号）：\n",(async s=>{console.log("您选择了：",t[s].branch+"分支"),await m({appName:t[s].appName,release:t[s].branch,master:o,npmScript:t[s].npmScript,customScript:n,debug:r,dist:e}),a.close()}))}export{u as default};
