import{execaSync as t,execa as o}from"execa";import{chdir as e,cwd as r}from"node:process";import s from"node:readline";import{stat as i}from"node:fs/promises";import n from"node:path";import c from"ora";const m=n.resolve();let a=c("");const p=async({appName:s,release:c,master:p,npmScript:u,customCommit:l,debug:d,dist:g,shortCommit:f})=>{process.on("uncaughtException",(t=>{a.fail((d?"调试":"打包或部署")+"意外退出，遇到以下问题：\n"),console.log(t),process.exit()})).on("SIGINT",process.exit).on("exit",(()=>{try{t("git",["worktree","remove","-f","-f",c]),t("git",["worktree","prune"])}catch(t){}t("exit",[1])}));const{stdout:h}=await o("git",["symbolic-ref","--short","-q","HEAD"]);if(p&&p!==h)return t("echo",[`请切换到 ${p} 分支后再进行打包。`]),void t("exit",[1]);a.text=`开始${d?"调试":"打包部署"}...`,a.start();try{await i(n.join(m,"build"))}catch(o){t("mkdir",["build"])}finally{const{stdout:r}=await o("git",["worktree","add","-B",c,`build/${c}`,`origin/${c}`]);console.log(r),e(`build/${c}`),t("rm",["-rf","*"]),e(m)}a.text=`正在运行打包脚本... npm run ${u}`;const{stdout:$,stderr:b}=await o("npm",["run",u]);if(console.log(b+"\n",$),t("cp",["-rf",`${g}${s?`/${s}`:""}/*`,`build/${c}`]),e(`build/${c}`),d)return console.log(`git三连前的工作目录${r()}`),void a.succeed("调试完成");a.text="打包完成，准备git发布";const{stdout:x}=await(w=h,o("git",["rev-parse",...f?["--short"]:[],w]));var w;if(l)var v=l({release:c});const y=`built by ${v||`[ srcBranch:${h} ]`} [ commit-hash:${x} ]`;t("git",["add","-A"]),t("git",["commit","-m",y]);const{stdout:C}=t("git",["push","-u","--set-upstream","origin",c],{shell:!0});console.log(C),a.succeed(`代码推送成功，本次推送的git提交信息为：${y}，打包分支为${c}`)};function u({release:t="release",dist:o="dist",master:e="master",debug:r=!1,npmScript:i,customCommit:n=null,shortCommit:c=!0}){if("string"==typeof t)return void p({release:t,master:e,npmScript:i,customCommit:n,debug:r,dist:o,shortCommit:c});const m=[];for(const o in t)m.push(`${o}.${t[o].branch}`);let a=s.createInterface({input:process.stdin,output:process.stdout});console.log("所有的构建分支：\n"+m.join("\n")),a.question("请选择一个构建分支（序号）：\n",(async s=>{console.log("您选择了：",t[s].branch+"分支"),await p({appName:t[s].appName,release:t[s].branch,master:e,npmScript:t[s].npmScript,customCommit:n,debug:r,dist:o,shortCommit:c}),a.close()}))}export{u as default};
